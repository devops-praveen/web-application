trigger:
- test12

variables:
  subscriptionid: 'Azure subscription 1(6c4b37cc-94e2-463b-84cb-ffd0dd27a50b)'
  resourcegroupname: 'test-rg'
  storgaeaccountname: 'tfbackup'
  containername: 'tfstate'
  keyname: 'terraform.tfstate'
stages:
  - stage: Build
    jobs:
    - job: Build
      pool:
        vmImage: ubuntu-latest
      continueOnError: false
      steps:
      - script: ls -al && pwd
        displayName: 'files listing'
      - script: sudo apt install unzip
        displayName: 'unzip downloading' 

      - task: TerraformInstaller@0
        inputs:
          terraformVersion: '1.2.5'
      
      - task: TerraformTaskV3@3
        displayName: 'terraform init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          backendServiceArm: '$(subscriptionid)'
          backendAzureRmResourceGroupName: '$(resourcegroupname)'
          backendAzureRmStorageAccountName: '$(storgeaccountname)'
          backendAzureRmContainerName: '$(containername)'
          backendAzureRmKey: '$(keyname)'

      - task: TerraformTaskV3@3
        displayName: 'terraform validate'
        inputs:
          provider: 'azurerm'
          command: 'validate'
      - task: TerraformTaskV3@3
        displayName: 'terraform plan'
        inputs:
          provider: 'azurerm'
          command: 'plan'
          commandOptions: "-out=plan.out"
          environmentServiceNameAzureRM: '$(subscriptionid)'
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: |
            **/*
            !.terraform/**/*
          TargetFolder: '$(Build.ArtifactStagingDirectory)/terraform'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: 'drop'
          publishLocation: 'Container'
