# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- test12
stages:
  - stage: Deploy
    jobs:
    - job: Deploy
      pool: 
       vmImage: ubuntu-latest
      steps:
      - script: sudo apt install unzip
        displayName: 'installing unzip'

      - task: TerraformInstaller@0
        inputs:
          terraformVersion: '1.2.5'

      - task: DownloadBuildArtifacts@0
        inputs:
          artifactName: 'drop'
          downloadType: 'single'
          downloadPath: '$(System.ArtifactsDirectory)'
      - task: TerraformTaskV3@3
        displayName: 'terraform init'
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.ArtifactsDirectory)/drop/.terraform'
          backendServiceArm: 'Azure subscription 1(6c4b37cc-94e2-463b-84cb-ffd0dd27a50b)'
          backendAzureRmResourceGroupName: 'test-rg'
          backendAzureRmStorageAccountName: 'tfbackup'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'terraform.tfstate'
      - task: TerraformTaskV3@3
        displayName: 'terraform apply'
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.ArtifactsDirectory)/drop/.terraform'
          commandOptions: '"plan.out"'
          environmentServiceNameAzureRM: 'Azure subscription 1(6c4b37cc-94e2-463b-84cb-ffd0dd27a50b)'